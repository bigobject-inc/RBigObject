% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\docType{methods}
\name{dbFetch,BigObjectResult,numeric-method}
\alias{dbFetch,BigObjectResult,numeric-method}
\alias{dbFetch,BigObjectResult,missing-method}
\alias{dbGetQuery,BigObjectConnection,character-method}
\alias{dbSendQuery,BigObjectConnection,character-method}
\alias{dbBind,BigObjectResult-method}
\alias{dbClearResult,BigObjectResult-method}
\alias{dbGetStatement,BigObjectResult-method}
\title{Execute a SQL statement on a database connection.}
\usage{
\S4method{dbFetch}{BigObjectResult,numeric}(res, n = -1, ...,
  row.names = FALSE)

\S4method{dbFetch}{BigObjectResult,missing}(res, n = -1, ...)

\S4method{dbGetQuery}{BigObjectConnection,character}(conn, statement, n = -1L,
  ...)

\S4method{dbSendQuery}{BigObjectConnection,character}(conn, statement,
  params = NULL, ...)

\S4method{dbBind}{BigObjectResult}(res, params, ...)

\S4method{dbClearResult}{BigObjectResult}(res, ...)

\S4method{dbGetStatement}{BigObjectResult}(res, ...)
}
\arguments{
\item{res}{A  \code{\linkS4class{BigObjectResult}} object.}

\item{n}{Number of rows to retrieve. Use -1 to retrieve all rows.}

\item{...}{Unused. Needed for compatibility with generic.}

\item{row.names}{Either \code{TRUE}, \code{FALSE}, \code{NA} or a string.

If \code{TRUE}, always translate row names to a column called "row_names".
If \code{FALSE}, never translate row names. If \code{NA}, translate
rownames only if they're a character vector.

A string is equivalent to \code{TRUE}, but allows you to override the
default name.

For backward compatibility, \code{NULL} is equivalent to \code{FALSE}.}

\item{conn}{an \code{\linkS4class{BigObjectConnection}} object.}

\item{statement}{a character vector of length one specifying the SQL
statement that should be executed.  Only a single SQL statment should be
provided.}

\item{params}{A list of query parameters to be substituted into
a parameterised query.}
}
\description{
To retrieve results a chunk at a time, use \code{dbSendQuery},
\code{dbFetch}, then \code{dbClearResult}. Alternatively, if you want all the
results (and they'll fit in memory) use \code{dbGetQuery} which sends,
fetches and clears for you.
}
\details{
\code{fetch()} will be deprecated in the near future; please use
\code{dbFetch()} instead.
}
\examples{
con <- dbConnect(RBigObject::BigObject(), dbname = "test")
dbWriteTable(con, "arrests", datasets::USArrests, overwrite = TRUE)

# Run query to get results as dataframe
dbGetQuery(con, "SELECT * FROM arrests limit 3")

# Send query to pull requests in batches
res <- dbSendQuery(con, "SELECT * FROM arrests")
data <- dbFetch(res, n = 2)
data
dbHasCompleted(res)

dbClearResult(res)
dbRemoveTable(con, "arrests")
dbDisconnect(con)
}
